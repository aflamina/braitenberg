@@ -0,0 +1,78 @@
/*
 * todo: calibration routine at startup for settings light max value
 */

import lejos.nxt.*;

public class CreatureFive {
  static final int LEFT = 0;
  static final int RIGHT = 1;
  static final float MAX_SPEED = Motor.A.getMaxSpeed();
  static final int THRESHOLD = 50; // 50%
  satic final string TXTOUT = "---CREATURE4a---";

  static int toggle = 0;
  static int lightIntensity[] = {0, 0};
  static int soundIntensity = 0;
  static int colorIntensity = 0;
  static float batteryVoltage = 0.0f;
  static float speed[] = {0.0f, 0.0f};
  
  static LightSensor lightSensor[] = new LightSensor[2];
  static SoundSensor soundSensor = new SoundSesnor;
  static ColorSensor colorSensor = new ColorSensor;

	static {
		lightSensor[LEFT] = new LightSensor(SensorPort.S1);
		lightSensor[RIGHT] = new LightSensor(SensorPort.S2);
		soundSensor = new SoundSensor(SensorPort.S4);
		colorSensor = new ColorSensor(SensorPort.S3);
		
		Button.ENTER.addButtonListener(new ButtonListener() {
			public void buttonPressed(Button b) {
				if(toggle == 0) {
					TXTOUT = "---CREATURE4b---"
					CreatureFour.toggle = 1;
				}
				else if(toggle == 1) {
				  TXTOUT = "---CREATURE4b---";
					CreatureFour.toggle = 2;
				}
				else {
					TXTOUT = "---CREATURE4a---";
					CreatureFour.toggle = 0;
				}
			}
      	public void buttonReleased(Button b) {}
    	});
	}

	public static void setSpeed() {
					
		if(toggle == 0) { 
		  // Creature type 4a
		  
		} 
		else if(toggle == 1) {
		  // Creature type 4b
		  
		}
		else { 
		  // Creature type 4c
			
		}
	}
	
  public static int NormalizeLightSensorValue(int RawValue) {
    //RawValue between 0 and 1023 or 200 and 900 normalize to 0 to 100
    return RawValue/10;
  }

  public static int NormalizeSoundSensorValue(int RawValue) {
    //RawValue between 
    return RawValue/10;
  }

  public static int NormalizeColorSensorValue(int RawValue) {
    //normalize to 0 to 100
    return RawValue/10;
  }
  
	public static void main(String[] args) throws Exception {
		LCD.drawString(TXTOUT, 0, 0);
		lightSensor[LEFT].setFloodlight(false);
		lightSensor[RIGHT].setFloodlight(false);
		while(!Button.ESCAPE.isDown()) {
			// 0...1023; ADC raw value
			lightIntensity[LEFT] = NormalizeLightSensorValue(lightSensor[LEFT].readValue());
			lightIntensity[RIGHT] = NormalizeLightSensorValue(lightSensor[RIGHT].readValue());
			soundIntensity = NormalizeSoundSensorValue(soundSensor.readValue());
			colorIntensity = NormalizeColorSensorValue(colorSensor.readValue());
			batteryVoltage = Battery.getVoltage();

			setSpeed();

			LCD.drawString("I_l: " + lightIntensity[LEFT], 0, 1);
			LCD.drawString("I_r: " + lightIntensity[RIGHT], 0, 2);
			LCD.drawString("U_batt[V]: " + batteryVoltage, 0, 3);
			LCD.drawString("w_l['/s]: " + speed[LEFT] , 0, 4);
			LCD.drawString("w_r['/s]: " + speed[RIGHT], 0, 5);

			Motor.A.setSpeed(speed[LEFT]);
			Motor.C.setSpeed(speed[RIGHT]);
			Motor.A.forward();
			Motor.C.forward();
		}
	}
}
